doctype html
//
    ~  @project: datatable-wrapper
    ~  @author: @extendslcc - <lucas.lcc@hotmail.com>
//
    ~  @project: datatable-wrapper
    ~  @author: @extendslcc - <lucas.lcc@hotmail.com>
    ~  @file: TestModules.html
    ~  @Created: 25/03/2020 - 15:45
    ~  @LastChange: 25/03/2020 - 09:44
html(lang='en')
    head
        meta(charset='UTF-8')
        title Title
        link(href='https://cdn.datatables.net/1.10.20/css/jquery.dataTables.min.css', rel='stylesheet')
        link(rel='stylesheet', href='https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css', integrity='sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh', crossorigin='anonymous')
    body
        .container
            table#datatable
                  thead
                        tr
                              th
                              th
                              th
                              th
                  tbody
                        -
                          function randomDate(start, end) {
                             return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));
                          }
                          function rnd( min, max ){
                            return Math.random() * (max - min) + min;
                          }
                          function rndInt( min, max ){
                            return String( parseInt(rnd( min, max ) ) ).padStart( 2, '0' )
                          }

                        each val in [...Array(80).keys()]
                              tr
                                    td=String( Math.random() / 10000 ).substring( rnd(2, 7), rnd( 7,10 )  )
                                    td=rnd( -999999, 9999999 )
                                    td=rnd(-9999, 9999)
                                    td=`${rndInt(1990,2040)}-${rndInt(1,12)}-${rndInt(1,28)}`
        script(src='https://code.jquery.com/jquery-3.4.1.min.js', integrity='sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=', crossorigin='anonymous')
        script(src='https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js')
        script(src='https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment-with-locales.min.js')
        script(src='../app-util.js')
        script(type='module').
            import { extendDatatableDefaultOptions } from '../default-option/default-option-initialize.js'

            import { ReportDefault } from '../default-option/option-modules/report-default.js'

            import { formatColumnInteger } from '../column/column-format/format-modules/integer-format.js';
            import { formatColumnCurrency } from '../column/column-format/format-modules/currency-format.js';
            import { formatColumnPercent } from '../column/column-format/format-modules/percent-format.js';
            import { formatColumnDate } from '../column/column-format/format-modules/date-format.js';

            extendDatatableDefaultOptions( ReportDefault );

            const data = [
                         	{
                         		"integer": "4CAD7D42-BC08-E800-7F53-48CF7D36E8F8",
                         		"currency": "8466.6929",
                         		"percent": "7667",
                         		"date": "2021-01-26"
                         	},
                         	{
                         		"integer": "84BE3B22-AE10-FE94-4E74-1D9878FC91AE",
                         		"currency": "7766.9495",
                         		"percent": "7832",
                         		"date": "2020-07-23"
                         	},
                         	{
                         		"integer": "10BA896D-E83C-DCE3-CD2F-C8FF87EBBD2F",
                         		"currency": "7624.0930",
                         		"percent": "8777",
                         		"date": "2021-01-04"
                         	},
                         ];

            $( '#datatable' ).DataTable().destroy();
            $( '#datatable' ).DataTable( {
                //data: data,
                columnDefs: [
                    formatColumnInteger( [0] ),
                    formatColumnCurrency( [1] ),
                    formatColumnPercent( [2] ),
                    formatColumnDate( [3] )
                ],
                columns: [
                    { title: 'Integer', data: 'integer' },
                    { title: 'Currency BRL', data: 'currency' },
                    { title: 'Percent', data: 'percent' },
                    { title: 'Date', data: 'date' },
                ]
            } );
